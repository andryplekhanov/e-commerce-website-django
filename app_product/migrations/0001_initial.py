# Generated by Django 2.2 on 2023-01-28 09:15

import app_product.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app_vendor', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='название')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='url-адрес')),
                ('icon', models.FileField(blank=True, db_index=True, upload_to='category/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'svg'], message='Ошибка загрузки: допускаются только файлы с расширением .png .svg'), app_product.validators.product_image_size_validate], verbose_name='иконка')),
                ('image', models.ImageField(blank=True, db_index=True, upload_to='category/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'gif', 'svg'], message='Ошибка загрузки: допускаются только файлы с расширением .jpg .gif .png .svg'), app_product.validators.product_image_size_validate], verbose_name='изображение')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='app_product.Category', verbose_name='родительская категория')),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'категории',
                'ordering': ('name',),
                'unique_together': {('parent', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='ParameterName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='характеристика')),
            ],
            options={
                'verbose_name': 'имя характеристики',
                'verbose_name_plural': 'имена характеристик',
            },
        ),
        migrations.CreateModel(
            name='ParameterValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='значение')),
            ],
            options={
                'verbose_name': 'значение характеристики',
                'verbose_name_plural': 'значения характеристик',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='название')),
                ('description', models.TextField(blank=True, db_index=True, verbose_name='описание')),
                ('price', models.DecimalField(db_index=True, decimal_places=2, max_digits=10, verbose_name='цена')),
                ('stock', models.PositiveIntegerField(db_index=True, verbose_name='остаток')),
                ('available', models.BooleanField(db_index=True, default=True, verbose_name='доступен')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='дата создания')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, verbose_name='дата обновления')),
                ('manufacturer', models.CharField(db_index=True, max_length=50, verbose_name='производитель')),
                ('limited', models.BooleanField(db_index=True, default=False, verbose_name='ограниченная серия')),
                ('category', mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='category', to='app_product.Category', verbose_name='категория')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='app_vendor.Vendor', verbose_name='магазин')),
            ],
            options={
                'verbose_name': 'продукт',
                'verbose_name_plural': 'продукты',
                'ordering': ('price',),
            },
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameter', to='app_product.ParameterName', verbose_name='название')),
                ('products', models.ManyToManyField(blank=True, db_index=True, to='app_product.Product', verbose_name='продукты')),
                ('value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameter', to='app_product.ParameterValue', verbose_name='значение')),
            ],
            options={
                'verbose_name': 'характеристика',
                'verbose_name_plural': 'характеристики',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/%Y/%m/%d', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'gif', 'svg'], message='Ошибка загрузки: допускаются только файлы с расширением .jpg .gif .png .svg'), app_product.validators.product_image_size_validate], verbose_name='изображение')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='app_product.Product', verbose_name='продукт')),
            ],
            options={
                'verbose_name': 'изображение',
                'verbose_name_plural': 'изображения',
            },
        ),
    ]
